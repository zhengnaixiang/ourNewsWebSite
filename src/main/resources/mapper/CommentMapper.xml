<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.comment.mapper.CommentMapper">

    <resultMap id="commentMap" type="com.qf.comment.pojo.Comment">
        <id column="comment_id" property="comment_id"></id>
        <result column="parent_id" property="parent_id"></result>
        <result column="np_id" property="np_id"></result>
        <result column="comment_date" property="comment_date"></result>
        <result column="comment_content" property="comment_content"></result>
        <result column="user_id" property="user_id"></result>
        <result column="status" property="status"></result>
        <result column="user_alias" property="user_alias"></result>
        <result column="user_imageUrl" property="user_imageUrl"></result>
        <collection property="commentList" ofType="com.qf.comment.pojo.Comment">
            <id column="c2_id" property="comment_id"></id>
            <result column="c2_pid" property="parent_id"></result>
            <result column="c2_npid" property="np_id"></result>
            <result column="c2_date" property="comment_date"></result>
            <result column="c2_content" property="comment_content"></result>
            <result column="c2_uid" property="user_id"></result>
            <result column="c2_status" property="status"></result>
            <result column="c2_alias" property="user_alias"></result>
            <result column="c2_url" property="user_imageUrl"></result>
        </collection>
    </resultMap>
    <resultMap id="commentSearchMap" type="com.qf.comment.dto.CommentSeachDto">
        <id column="comment_id" property="comment_id"></id>
        <result column="comment_content" property="comment_content"></result>
        <result column="comment_date" property="comment_date"></result>
        <result column="status" property="status"></result>
        <result column="user_id" property="user_id"></result>
        <result column="user_alias" property="user_alias"></result>
        <result column="np_id" property="np_id"></result>
        <result column="np_title" property="np_title"></result>
    </resultMap>

    <insert id="addCommentBy" parameterType="com.qf.comment.vo.CommentVo">
      insert into comment(parent_id,np_id,comment_content,user_id)
      values(#{parent_id},#{np_id},#{comment_content},#{user_id})
    </insert>

    <select id="getCommentByNpId" resultMap="commentMap" parameterType="Integer">
        select c3.*,u1.user_alias,u1.user_imageUrl,u2.user_alias c2_alias,u2.user_imageUrl c2_url
        from (
          select c1.*,c2.comment_id c2_id,c2.parent_id c2_pid,c2.np_id c2_npid,c2.comment_date c2_date,c2.comment_content c2_content,c2.user_id c2_uid,c2.`status` c2_status
          from comment c1 left join comment c2 on c2.parent_id=c1.comment_id
          where c1.np_id=#{np_id} and c1.parent_id=0 and c1.`status`=1
          ) c3
        left join userinfo u1 on u1.user_id=c3.user_id and u1.user_power != 0
        left join userinfo u2 on u2.user_id=c3.c2_uid and u2.user_power != 0
    </select>

    <select id="getNpCommentByUserId" resultMap="commentMap" parameterType="Integer">
        select c3.*,u1.user_alias,u1.user_imageUrl,u2.user_alias c2_alias,u2.user_imageUrl c2_url
        from (
          select c1.*,c2.comment_id c2_id,c2.parent_id c2_pid,c2.np_id c2_npid,c2.comment_date c2_date,c2.comment_content c2_content,c2.user_id c2_uid,c2.`status` c2_status
          from comment c1 left join comment c2 on c2.parent_id=c1.comment_id
--           如果user_id匹配，则status=1或者=0都显示
--           即可访问自己发表的未审核的评论
          where c1.np_id=#{np_id} and c1.parent_id=0 and if(c1.user_id = #{user_id},c1.`status`=1 or c1.`status`=0,c1.`status`=1)
          ) c3
        left join userinfo u1 on u1.user_id=c3.user_id and u1.user_power != 0
        left join userinfo u2 on u2.user_id=c3.c2_uid and u2.user_power != 0
    </select>

    <update id="deleteCommentByUser" parameterType="Integer">
        <if test="comment_id != 0 and user_id != 0">
            update comment set `status` = 2 where comment_id = #{comment_id} and user_id = #{user_id}
        </if>
    </update>

    <select id="searchCommentByLike" resultMap="commentSearchMap" parameterType="com.qf.comment.vo.CommentSeachVo">
        select c.comment_id,c.comment_content,c.comment_date,c.`status`,u.user_id,u.user_alias,n.np_id,n.np_title
        from comment c, userinfo u, newpaper n
        <where>
            c.user_id = u.user_id and c.np_id = n.np_id
            <trim prefix="and(" suffix=")" prefixOverrides="and">
                <if test="dateEnd != null and dateEnd != ''">
                    and c.comment_date between #{dateBegin} and #{dateEnd}
                </if>
                <if test="status != null">
                    and c.`status` = #{status}
                </if>
                <if test="user_alias != null and user_alias != ''">
                    and u.user_alias like CONCAT('%',#{user_alias},'%')
                </if>
                <if test="np_title != null and np_title != ''">
                    and n.np_title like CONCAT('%',#{np_title},'%')
                </if>
            </trim>
        </where>
    </select>

</mapper>