<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    <!-- 1、配置自定控制器扫描路径 -->
    <!--这里配置的是controller的路径-->
    <context:component-scan base-package="com.qf.*.controller,com.qf.tools,com.qf.filter"></context:component-scan>
    <!-- 2、配置静态资源处理 -->
    <mvc:default-servlet-handler />
    <!-- 3、配置注解驱动 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--4、配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".html"></property>
    </bean>

    <!--<mvc:resources location="/" mapping="/*.html"/>-->

    <!--&lt;!&ndash; 使用thymeleaf解析 &ndash;&gt;-->
    <!--<bean id="templateResolver"-->
          <!--class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">-->
        <!--<property name="prefix" value="/" />-->
        <!--<property name="suffix" value=".html" />-->
        <!--<property name="templateMode" value="HTML5"/>-->
        <!--<property name="cacheable" value="false"/>-->
        <!--<property name="characterEncoding" value="UTF-8"/>-->
    <!--</bean>-->

    <!--<bean id="templateEngine"-->
          <!--class="org.thymeleaf.spring4.SpringTemplateEngine">-->
        <!--<property name="templateResolver" ref="templateResolver" />-->
    <!--</bean>-->

    <!--<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">-->
        <!--<property name="characterEncoding" value="UTF-8"/>-->
        <!--<property name="templateEngine" ref="templateEngine"/>-->
    <!--</bean>-->

    <mvc:resources mapping="/upload/**" location="/upload/" cache-period="31536000"/>

    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize">
            <value>10485760</value>
        </property>
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

    <!-- swagger 配置文件-->
    <mvc:default-servlet-handler />
    <bean class="com.qf.personalInformation.tools.SpringfoxDocConfig"></bean>

    <!--谷歌验证码kaptcha-->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">yes</prop>
                        <prop key="kaptcha.border.color">105,179,90</prop>
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.image.width">125</prop>
                        <prop key="kaptcha.image.height">45</prop>
                        <prop key="kaptcha.textproducer.font.size">40</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

</beans>
